[{"content":"","date":null,"permalink":"/zh-cn/tags/ai/","section":"Tags","summary":"","title":"AI"},{"content":"","date":null,"permalink":"/zh-cn/tags/life/","section":"Tags","summary":"","title":"Life"},{"content":"","date":null,"permalink":"/zh-cn/tags/ml/","section":"Tags","summary":"","title":"ML"},{"content":"","date":null,"permalink":"/zh-cn/tags/pytorch/","section":"Tags","summary":"","title":"Pytorch"},{"content":"1. 数据操作 #1.1 数据操作 ## 数据操作 import torch x = torch.arange(12) x tensor([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\rx.shape torch.Size([12])\rx.numel() 12\rx = x.reshape(3, 4) x tensor([[ 0, 1, 2, 3],\r[ 4, 5, 6, 7],\r[ 8, 9, 10, 11]])\rtorch.zeros((2, 3, 4)) tensor([[[0., 0., 0., 0.],\r[0., 0., 0., 0.],\r[0., 0., 0., 0.]],\r[[0., 0., 0., 0.],\r[0., 0., 0., 0.],\r[0., 0., 0., 0.]]])\rtorch.ones((2, 3, 4)) tensor([[[1., 1., 1., 1.],\r[1., 1., 1., 1.],\r[1., 1., 1., 1.]],\r[[1., 1., 1., 1.],\r[1., 1., 1., 1.],\r[1., 1., 1., 1.]]])\rtorch.tensor([[1, 2, 3, 4], [2, 1, 3, 4], [3, 4, 1, 2]]).shape torch.Size([3, 4])\rx = torch.tensor([1.0, 2, 4, 8]) y = torch.tensor([2, 2, 2, 2]) x + y, x - y, x * y, x / y, x ** y (tensor([ 3., 4., 6., 10.]),\rtensor([-1., 0., 2., 6.]),\rtensor([ 2., 4., 8., 16.]),\rtensor([0.5000, 1.0000, 2.0000, 4.0000]),\rtensor([ 1., 4., 16., 64.]))\rtorch.exp(x) tensor([2.7183e+00, 7.3891e+00, 5.4598e+01, 2.9810e+03])\rX = torch.arange(12, dtype=torch.float32).reshape(3, 4) Y = torch.tensor([[2.0, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]]) torch.cat((X, Y), dim=0), torch.cat((X, Y), dim=1) (tensor([[ 0., 1., 2., 3.],\r[ 4., 5., 6., 7.],\r[ 8., 9., 10., 11.],\r[ 2., 1., 4., 3.],\r[ 1., 2., 3., 4.],\r[ 4., 3., 2., 1.]]),\rtensor([[ 0., 1., 2., 3., 2., 1., 4., 3.],\r[ 4., 5., 6., 7., 1., 2., 3., 4.],\r[ 8., 9., 10., 11., 4., 3., 2., 1.]]))\rX == Y tensor([[False, True, False, True],\r[False, False, False, False],\r[False, False, False, False]])\rX.sum() tensor(66.)\ra = torch.arange(3).reshape(3, 1) b = torch.arange(2) a, b # 同型矩阵运算为各元素分别计算，不同型矩阵运算先拓展到二者的最小公约类型再计算 (tensor([[0],\r[1],\r[2]]),\rtensor([0, 1]))\ra + b tensor([[0, 1],\r[1, 2],\r[2, 3]])\rX[-1], X[1:3] # X[1:3]，表示X的1、2两行（从0开始命名），左闭右开 (tensor([ 8., 9., 10., 11.]),\rtensor([[12., 12., 12., 12.],\r[ 8., 9., 10., 11.]]))\rX[1, 2] = 9 X tensor([[ 0., 1., 2., 3.],\r[ 4., 5., 9., 7.],\r[ 8., 9., 10., 11.]])\rX[0:2, :] = 12 X tensor([[12., 12., 12., 12.],\r[12., 12., 12., 12.],\r[ 8., 9., 10., 11.]])\rbefore = id(Y) Y += X id(Y) == before True\rY = Y + X id(Y) == before False\rZ = torch.zeros_like(Y) print(\u0026#34;id(Z): \u0026#34;, id(Z)) Z[:] = X + Y # 执行原地操作的办法 print(\u0026#34;id(Z): \u0026#34;, id(Z)) id(Z): 1932872841072\rid(Z): 1932872841072\rA = X.numpy() B = torch.tensor(A) type(A), type(B) (numpy.ndarray, torch.Tensor)\ra = torch.tensor([3.5]) a, a.item(), float(a), int(a) (tensor([3.5000]), 3.5, 3.5, 3)\r1.2 数据预处理 #import os os.makedirs(os.path.join(\u0026#39;\u0026#39;, \u0026#39;data\u0026#39;), exist_ok=True) data_file = os.path.join(\u0026#39;\u0026#39;, \u0026#39;data\u0026#39;, \u0026#39;house_tiny.csv\u0026#39;) with open(data_file, \u0026#39;w\u0026#39;) as f: f.write(\u0026#39;NumRooms, Alley, Price\\n\u0026#39;) f.write(\u0026#39;NA, Pave, 127500\\n\u0026#39;) f.write(\u0026#39;2, NA, 106000\\n\u0026#39;) f.write(\u0026#39;4, NA, 178100\\n\u0026#39;) f.write(\u0026#39;NA, NA, 140000\\n\u0026#39;) import pandas as pd data = pd.read_csv(data_file) print(data) NumRooms Alley Price\r0 NaN Pave 127500\r1 2.0 NA 106000\r2 4.0 NA 178100\r3 NaN NA 140000\rinputs, outputs = data.iloc[:, 0:2], data.iloc[:, 2] # iloc函数是用来取行或列 inputs = inputs.fillna(inputs.mean(numeric_only=True)) # fillna是填补NA的常见函数，这里采用均值插值法。注意此处必须添加numeric_only=True，因为只有数值才能计算均值 print(inputs) NumRooms Alley\r0 3.0 Pave\r1 2.0 NA\r2 4.0 NA\r3 3.0 NA\rinputs = pd.get_dummies(inputs, dummy_na=True) # 对于离散型的数值（如字符等），可采用get_dummies函数将其转化为数值型编码 print(inputs) NumRooms Alley_ NA Alley_ Pave Alley_nan\r0 3.0 False True False\r1 2.0 True False False\r2 4.0 True False False\r3 3.0 True False False\r2 矩阵计算 #2.1 梯度 #对于$\\frac{\\partial y }{\\partial x}$，我们可以对y和x分别分标量和矢量情况来讨论。\n","date":"2024年7月26日","permalink":"/zh-cn/study/pytorch/","section":"Studies","summary":"最近在学习Pytorch，以此记录下我所学习的一些语法。","title":"Pytorch学习笔记"},{"content":"","date":null,"permalink":"/zh-cn/study/","section":"Studies","summary":"","title":"Studies"},{"content":"","date":null,"permalink":"/zh-cn/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/zh-cn/","section":"Ystars","summary":"","title":"Ystars"},{"content":"考研结束后，我的内心抱有持久的伤痛，那些伤痛一直萦绕我的心头，直至大学毕业，谨以此文纪念我那最后的大学时光。\n西安 #去西安是去面试航空所（631所）的调剂。当初报名也仅是因为它是为数不多招收计算机科学技术（学硕）的调剂单位，而且报销往返交通、住宿费用。由此踏上前往西安的旅途。\n简单地说，面试黄了，但所幸在面试结束后当晚就收到了港科广的面试邀请，也算给了我最后的希望。\n临走的那天，我特意让司机绕了下陕西历史博物馆和大雁塔。看到大雁塔的瞬间，我不禁想起了十多年前的那个下晚，我随父母来西安旅游，仍是在旅游大巴车上遥望大雁塔。彼时的我或许永远也想不到我会以此方式再临西安吧。却不想因此错过了航班，只好在咸阳机场旁多住了一晚，为我这本就荒唐的出行更添一丝奇异。\n第二天一早，带着一丝疲惫，我终于离开了这个千年古都。\n广州 \u0026amp; 佛山 #很多时候，很多人，很多事都是在机缘巧合下发生的，而更多的时候，人都像一只无头苍蝇般在自己的人生轨迹上乱撞，以图撞出那尘封多年的枷锁。我来广州正是如此，也正如我报名港科广与北大软微一样，不过都是在跟风中妄图逆天改命罢了。只是事物多有联系性，环环相扣，最终还是逃不出这一环又一环。\n五月末的广州已然十分炎热，伴随着海洋性气候特有的湿润，很难让人在出行后不凝起一身汗珠。即使在冷气充足的空调房里，豆大的汗珠仍挂满我的额稍，令刚面试完的我略显病态。虽未可知结果如何，我已看得开些了。接下来的几天里，我虽无心出游，但躺在酒店里打游戏的心还是有的。与好友约上两局之后，无尽的空虚和恐惧又袭满我身。\n次日游了佛山，主要看了看祖庙，见了见黄飞鸿的徒子徒孙，稍吃了点顺德特产，便回去了。老实说，这些曾经令我痴迷多年的景点此刻竟难以提起我的一点兴趣。\n临行前，我特意去广州“小蛮腰”和海心桥看了看。我在心中默默想着，以后能来此处上学，日后来玩的机会还多着呢；倘若来不了，这遍我也无所谓了。\n从白云机场离开时，白云被乌云遮住了大部。\n毕业 #这个章节我本不想写的，毕竟破坏了我章节的有序性，但想到这毕竟也是我人生的一个转折点，此刻不写，日后也难有回忆了，便停不住笔墨，简单聊聊。\n简单而言，这时的我已经收到了港科广的录取通知书，因而也略怀开心地与同学们一起合影，照了很多毕业照。但是说有多开心，是绝对没有的。\n我曾无数次在睡觉前畅想过毕业典礼的场景，大约从我决定考研起，我就知道毕业典礼要么笑着过，要么苦笑着过。但此刻一想，我脑中终究还是响起了那首《我终于失去了你》。我恨我四年的努力化为泡影！我遗憾我过早地选择了考研！我伤痛我的四年如梦如幻、飞逝如电，却一事无成！正如我四年前走进这所学校一样。\n南京 \u0026amp; 镇江 \u0026amp; 扬州 #在前往这条线路前，我曾做过三次详细的计划，分别是河西走廊、顺江而下、北上辽东，但是都因汪凯瑞的因素耽误了，最终选择了这最朴实无华、最近、最短的江苏之旅。现下想想，人生又何尝不是如此呢？\n此三地我不想多加赘述，无非是白天出游，夜晚游戏。尽管前期准备很不爽，但是一起玩《文明6》的日子还是值得怀念的！\n以上为我2024上半年的年度总结，也是我大学的最终章。人生在世，苦多乐少。逆天改命，终归平凡。岂知人生何苦追忆往昔，我的一个时代终结了，我将这份记忆尘封于此，不再打开。\n","date":"2024年7月26日","permalink":"/zh-cn/life/graduation_season/","section":"生活","summary":"夜色微凉，不见那一抹残阳","title":"大学 · 最终章"},{"content":"","date":"2024年7月26日","permalink":"/zh-cn/study/nn/","section":"Studies","summary":"理论知识来源于周志华《机器学习》，我将在此页记录下我认为重要的知识点。","title":"机器学习"},{"content":"\r这是本博客的生活板块！🚀它将用于分享我周围的一些有趣的事情。你可以在评论区尽情评论，或者如果你也有一些有趣的经历，欢迎你在评论区分享。⭐\r保持每天愉快心情！ 😄 #","date":null,"permalink":"/zh-cn/life/","section":"生活","summary":"\r这是本博客的生活板块！🚀它将用于分享我周围的一些有趣的事情。你可以在评论区尽情评论，或者如果你也有一些有趣的经历，欢迎你在评论区分享。⭐\r保持每天愉快心情！ 😄 #","title":"生活"},{"content":"","date":null,"permalink":"/zh-cn/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"我目前是一名香港科技大学（广州）的人工智能研究型硕士生。在此之前，我在浙江大学获得了农学学士学位。\n在本科学习期间，我参与了一些与农业机器人和昆虫图像识别相关的项目，这激发了我对人工智能的兴趣。在代码方面我是半路出家，仍然是个菜鸟🤡。\n我将在本博客中不定期更新我的生活🏃‍♂️、学习📖和科研🖥️相关。希望访问本网站的朋友可以多多指教，尽情讨论。👋🤣\n","date":null,"permalink":"/zh-cn/about/","section":"关于","summary":"我目前是一名香港科技大学（广州）的人工智能研究型硕士生。在此之前，我在浙江大学获得了农学学士学位。","title":"关于"},{"content":"\r这是本博客的科研板块！🚀 我将记录一些我在香港科技大学（广州）攻读硕士期间将进行的研究。你可以在评论区尽情评论，或者如果你也有一些有趣的经历，欢迎你在评论区分享。⭐\r新的开始，新的科研！ ✊ #","date":null,"permalink":"/zh-cn/research/","section":"科研","summary":"\r这是本博客的科研板块！🚀 我将记录一些我在香港科技大学（广州）攻读硕士期间将进行的研究。你可以在评论区尽情评论，或者如果你也有一些有趣的经历，欢迎你在评论区分享。⭐\r新的开始，新的科研！ ✊ #","title":"科研"}]