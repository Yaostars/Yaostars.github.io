[{"content":"","date":null,"permalink":"/tags/ai/","section":"Tags","summary":"","title":"AI"},{"content":"","date":"26 July 2024","permalink":"/study/nn/","section":"Studies","summary":"All knowledge is based on the \u003cem\u003eMachine Learning\u003c/em\u003e written by Zhihua Zhou. I just record what I think important in this page.","title":"Machine Learning"},{"content":"","date":null,"permalink":"/tags/ml/","section":"Tags","summary":"","title":"ML"},{"content":"","date":null,"permalink":"/tags/pytorch/","section":"Tags","summary":"","title":"Pytorch"},{"content":"","date":"26 July 2024","permalink":"/study/pytorch/","section":"Studies","summary":"This article is written for my pytorch learning and some practical technique of ML.","title":"Pytorch Notes"},{"content":"","date":null,"permalink":"/study/","section":"Studies","summary":"","title":"Studies"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/","section":"Ystars","summary":"","title":"Ystars"},{"content":"","date":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux"},{"content":"1. Basic Knowledge #Installation #Reference\nOS Basic Knowledge #I previously studied courses on CSKaoyan, but other tutorials are also available.\nRemote Link to Linux #Just need to install a FinalShell SSH Tool to complete remote link. (Installation Tutorial)\nWSL #As an auxiliary tool for Linux, WSL is very convenient in some situations.\nSnapshot #A snapshot is used to save the current state of your virtual machine as a backup.\nDirectory Structure #Linux has a file directory structure as shown in the following figure. The highest level directory is \u0026ldquo;/\u0026rdquo;. System defaults to the \u0026ldquo;home/\u0026rdquo; directory.\n2. Orders and Functions #Linux orders often looks like:\ncommand [-options] [parameter] ls #ls [-a -l -h] [path] -a: show all (including hidden) files and folders -h: make information easier to read (often used together with \u0026ldquo;-l\u0026rdquo;) -l: list detailed information about files and folders\rls -alh /\t# show detailed information neatly of all files and folders in root directory cd \u0026amp; pwd \u0026amp; mkdir #\rcd: enter to path directory pwd: show current work path mkdir: create a new folder\rcd bob pwd mkdir [bob/]new_folder touch \u0026amp; cat \u0026amp; more #\rtouch: create a new file cat: show the content of a file more: see the content of a file and support page turning\rtouch [bob/]test.txt cat [bob/]test.txt more [bob/]test.txt cp \u0026amp; rm \u0026amp; mv #cp [-r] old_file new_file\t# Choose -r when copying a folder rm [-r -f] file1 file2...\t# -f means force delete, -r means deleting folders mv old_path new_path cp: copy a file or folder mv: move a file or folder to a new path rm: delete files or folders (use a wildcard \u0026ldquo;*\u0026rdquo; to achieve fuzzy matching)\rrm -f *.txt\t# Delete all files ending in \u0026#34;.txt\u0026#34; which \u0026amp; find #which order_name find begin_path -name \u0026#34;file_name\u0026#34; find begin_path -size +|-n[kMG]\t# \u0026#34;+\u0026#34; means larger, \u0026#34;-\u0026#34; means smaller, k/M/G are size units which: find the path of order files find: find files or directories location, can be used together with wildcard \u0026ldquo;*\u0026rdquo;\rfind / -name test*\t# find paths of all files and directories starting in \u0026#34;test\u0026#34; since the root directory find / -size - 100M\t# find paths of all files and directories smaller than 100M since the root directory grep \u0026amp; wc #grep [-n] keyword file_path\t# choose \u0026#34;-n\u0026#34; when you want to see the the line number in the file where the keyword is located wc [-c -m -l -w] file_path grep: find the keyword location in the file, can be used in conjunction with other commands, connected by pipeline symbols \u0026ldquo;|\u0026rdquo; in between wc: count the number of lines, words, etc. in the file -c: count number of bytes -m: count number of characters -l: count number of lines -w: count number of words\rcat test.txt | grep itheima | grep itcast\t# find sentences containing \u0026#34;itheima\u0026#34; or \u0026#34;itcast\u0026#34; in test.txt wc -c test.txt echo \u0026amp; tail #echo content tail [-f -num] path\t# choose \u0026#34;-f\u0026#34; when consistently follow a file, choose \u0026#34;-num\u0026#34; to point the number of last lines you want to see in the files (default with 10 lines) echo: print content instantly (suggest enclosing the output content with double quotation marks), can be used together with \u0026ldquo;\u0026gt;\u0026rdquo; or \u0026ldquo;\u0026gt;\u0026gt;\u0026rdquo; to write the output content to the file on the right. It can also be used with \u0026ldquo;`\u0026rdquo; to show the result of a command. \u0026gt;: overwrite \u0026gt;\u0026gt;: add write tail: show the last lines in a file\recho `pwd` \u0026gt;\u0026gt; test.txt\t# append the result of the \u0026#34;pwd\u0026#34; command to the test.txt tail -f -20 test.txt\t# continuously check the last 20 lines content of test.txt vi / vim #vim is an upgraded version of vi, which fully includes all the command methods of vi. In command mode: i: enter input mode at the cursor position a: enter input mode after the cursor position I: enter input mode at beginning of the line that the cursor position A: enter input mode at the end of the line that the cursor position o: enter input mode at the next line of cursor position O: enter input mode at the above line of cursor position esc: back to command mode in any situation [n]dd: delete n lines from cursor position [n]yy: copy the n+1 lines from current line p: paste u: revoke ctrl+r: reverse revoke gg: cursor jump to the first line G: cursor jump to the end of current line dG: delete all from the current line dgg: delete all above from the current line d$: delete content till the end of current line d0: delete content till the head of current line\nIn baseline command mode: :wq: save and quit :q: quit without save :q!: forced quit :w: save :set nu: show the number of current line :set paste: set the paste mode\n3. MySQL Project #","date":"24 July 2024","permalink":"/study/linux/","section":"Studies","summary":"By following \u003ca href=\"https://www.itheima.com/\" target=\"_blank\" rel=\"noreferrer\"\u003eItheima\u003c/a\u003e, I\u0026rsquo;m learning some knowledge and basic orders about Linux. This article is only used for me to recall knowledge. If there are something hard to understand, please forgive me.","title":"Linux Notes"},{"content":"I\u0026rsquo;m an Mphil student in HKUST(GZ) now, majoring in Artificial Intelligence. Prior to this, I pursued a Bachelor\u0026rsquo;s degree in Agriculture at Zhejiang University.\nI have worked on some projects related to agricultural robots and insect image recognition during my undergraduate studies, which sparked my interest in artificial intelligence. As I switched to a new profession, I am still a noviceü§° in coding and professional skills.\nI will periodically update my lifeüèÉ‚Äç‚ôÇÔ∏è, studyüìñ, and researchüñ•Ô∏è related in this blog. You can point my fault if you want and have a pleasant discussion.üëãü§£\n","date":null,"permalink":"/about/","section":"About","summary":"I\u0026rsquo;m an Mphil student in HKUST(GZ) now, majoring in Artificial Intelligence.","title":"About"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"\rThis is the Life section of my blog! üöÄ It will be used to share some interesting things around me. You can say whatever you want in comments section or if you also have some fun experience, welcome you to share it in comments section. ‚≠ê\rNever forget to keep a happy mood every day! üòÑ #","date":null,"permalink":"/life/","section":"Life","summary":"This is the Life section of my blog!","title":"Life"},{"content":"\rThis is the Research section of my blog! üöÄ I will record some researches which I will carry on during my Mphil time in HKUST(GZ). You can say whatever you want in comments section or if you also have some fun experience, welcome you to share it in comments section. ‚≠ê\rNew point, new research! ‚úä #","date":null,"permalink":"/research/","section":"Research","summary":"This is the Research section of my blog!","title":"Research"}]